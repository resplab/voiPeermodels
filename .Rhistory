tech.stocks
tech.stocks <- cbind(tech.stocks, avg)
tech.stocks
tech.stocks <- cbind(tech.stocks, avg)
tech.stocks <- rbind(stock.matrix, FB)
tech.stocks <- cbind(tech.stocks, avg)
tech.stocks
v <- c(1,2,3,4,5)
v[2]
mat <- matrix(1:50)
mat <- matrix(1:50, byrow=T, nrow=5)
mat
mat[1,]
mat
mat[,1]
mat[1:3,]
mat[1:2, 1:3]
mat[,9:10]
mat[2:3,5:6]
animal <- c('d','c','d','c','c')
animail
animal
id <- c(1,2,3,4,5)
factor(animal)
fact.ani <- factor(animal)
ord.cat <- c('cold', 'med', 'hot')
temps <- c('cold', 'med', 'hot', 'hot', 'hot', 'cold', 'med')
temps
temps
fact.temp <- factor(temps, ordered = TRUE, levels = c('cold', 'med', 'hot'))
fact.temp
summary(fact.temp)
summary(temps)
A <- c(1,2,3)
B <- C(4,5,6)
B <- c(4,5,6)
rbind(A,B)
1:9
matrix(1:9, byrow=T, nrow=3)
mat <- matrix(1:9, byrow=T, nrow=3)
matrix(data, nrow = rows, ncol = cols)
is.matrix(mat)
is.array(mat)
is.data.frame(mat)
mat2 <- matrix(1:25,byrow=T, nrow=5)
mat2
mat2[2:3, 2:3]
mat2[4:5,4:5]
mat2[2:3,2:5]
sum(mat2)
colSums(mat2)
rowSums(mat2)
help(runif)
runif(20)
runif(20, min = 0, max = 100)
matrix(runif(20), nrow=4)
state.x77
USPersonalExpenditure
women
data()
WorldPhones
head(state.x77)
tail(state.x77)
str(state.x77)
summary(state.x77)
days <- c('Mon', 'Tue', 'Wed', 'Thur', 'Fri')
temps <- c(22.2, 21, 23, 24.3, 25)
rain <- c(T,T,F,F,T)
data.frame(days, temp, rain)
data.frame(days, temps, rain)
df <- data.frame(days, temps, rain)
df
str(df)
summary(df)
source('~/.active-rstudio-document', echo=TRUE)
df
df[1,]
df[,1]
df[,'rain']
df[1:5]
df[1:5,c('days', 'temp')]
df$days
df$temp
df['days']
subset(df,subset = rain==TRUE)
subset(df, subset = temp>23)
sorted.temp <- order(df['temp'])
sorted.temp
df[sorted.temp,]
desc.temp <- order(-df['temp'])
desc.temp
df[desc.temp]
df[desc.temp,]
desc.temp <- order(-df$temp)
desc.temp
empty <- data.frame()
c1 <- 1:10
c1
letters
c2 <- letters[1:10]
c1
c2
df <- data.fram(col.name.1=c1, col.name.2=c2)
df <- data.frame(col.name.1=c1, col.name.2=c2)
df
write.csv(df, file = 'saved_df.csv')
df2 <- read.csv('saved_df.csv')
df2
df
df
nrow(df)
ncol(df)
colnames(df)
rownames(df)
str(df)
summary(df)
df
df[[5,2]]
df[5,2]
df[[5,'col.name.2']]
df[[2,'col.name.1']] <- 999
df
df[1,]
mtcars
head(mtcars)
head(mtcars)
mtcars$mpg
mtcars[,'mpg']
mtcars[,1]
mtcars[['mpg']]
mtcars['mpg']
tcars[1]
mtcars[1]
head(mtcarsc[c('mpg','cyl')])
head(mtcars[c('mpg','cyl')])
library(devtools)
packageVersion("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
packageVersion("devtools")
library(tidyverse)
library(fs)
empty <- data.frame()
c1 <- 1:10
c1
letters
c2 <- letters[1:10]
c1
c2
df <- data.frame(col.name.1 = c1, col.name.2 = c2)
df
write.csv(df, file = 'saved_df.csv')
df2 <- read.csv('saved_df.csv')
df2
nrow(df)
ncol(df)
colnames(df)
rownames(df)
str(df)
summary(df)
df
df[[5,2]]
df[[5,'col.name.2']]
df[[2, 'col.name.1']] <- 9999
df
df[1,]
mtcars
head(mtcars)
head(mtcars)
mtcars$mpg
mtcars$mpg
mtcars[,'mpg']
mtcars[,1]
mtcars[['mpg']]
mtcars['mpg']
head(mtcars[c('mpg', 'cyl')])
df2 <- data.frame(col.name.1 = 2000, col.name.2 = 'new')
df2
df
dfnew <- rbind(df, df2)
dfnew
df
df$newcol <- 2*df$col.name.1
df
df
df$newcol <- df$newcol
head(df)
df[,'newcol.copy2'] <- df$newcol
head(df)
df$newcol.copy <- df$newcol
head(df)
colnames(df) <- c('1', '2', '3', '4', '5')
head(df)
colnames(df)[1] <- 'NEW COL NAME'
head(df)
df[1:10]
df[1:10,]
df[1:3,]
head(df)
head(df, 7)
head(df)
df[-2,]
head(mtcars)
mtcars[ mtcars$mpg > 20, ]
head(mtcars)
mtcars[ (mtcars$mpg) > 20 & (mtcars$cyl) == 6, ]
mtcars[ (mtcars$mpg) > 20 & (mtcars$cyl) == 6, c('mpg', 'cyl', 'hp')]
subset(mtcars, mpg > 20 & cyl == 6)
head(mtcars)
mtcars[, c(1,2,3)]
mtcars[, c('mpg', 'cyl')]
is.na(mtcars)
any(is.na(df))
any(is.na(mtcars$mpg))
any(is.na(mtcars))
df[is.na(df)] <- 0
mtcars$mpg[is.na(mtcars$mpg)] <- mean(mtcars$mpg)
source('~/.active-rstudio-document', echo=TRUE)
head(mtcars)
data()
is.data.frame(mtcars)
mat <- matrix(1:25, nrows = 5)
mat <- matrix(1:25, nrow = 5)
as.data.frame(mat)
mat
df <- mtcars
head(df, 6)
head(df)
df$mpg
mean(df$mpg)
df[df$cyl == 6, ]
subset(df, cyl == 6)
df[, 'am']
df[, c('am', 'gear', 'carb')]
df$performance <- df$hp/df$wt
head(df)
help("round")
df$performance <- round(df$performance, 2)
head(df)
subset(df, hp > 100 & wt > 2.5)
subset(df, hp > 100 & wt > 2.5)$mpg
mean(subset(df, hp > 100 & wt > 2.5)$mpg)
mean(df[df$hp > 100 & df$wt > 2.5, ]$mpg)
df['Hornet Sportabout', ]
df['Hornet Sportabout', ]$mpg
v <- c(1,2,3)
m <- matrix(1:10, nrow=2)
df <- mtcars
class(v)
class(m)
class(df)
my.list <- list(v,m,df)
my.list
my.name.list <- list(sample_vec = v, my.matrix = m, sample.df = df)
my.name.list
my.list[1]
my.name.list[1]
my.name.list['sample.vec']
my.name.list['sampled.vec']
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
1:nrow(mat)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(accept)
samplePatients <- accept::samplePatients
results <- accept2(samplePatients[1,])
print(t(results))
results
results <- accept2(samplePatients[1,])
results
accept2(samplePatients[1,])
source('~/RESP/accept/R/predict.R')
library(tidyverse)
library(accept)
source('~/RESP/accept/R/predict.R')
library(tidyverse)
#' @param KeepMeds default is TRUE. If set to false, the reduced model without medication predictors will be used.
#' @param ... for backward compatibility
#' @return patientData with prediction
#'
#' @importFrom splines ns
#' @importFrom stats reshape
#'
#' @examples
#' results <- accept2(samplePatients)
#' @export
accept2 <- function (patientData, random_sampling_N = 1e2, lastYrExacCol="LastYrExacCount",
lastYrSevExacCol="LastYrSevExacCount", KeepSGRQ = TRUE, KeepMeds = TRUE, ...){
betas <- list()
if (KeepSGRQ & KeepMeds){
# model coefficients
betas$gamma	                    <- 0.9706
betas$b0	                      <- -0.2014
betas$b_male	                  <- -0.1855
betas$b_age10	                  <- -0.00823
betas$b_nowsmk	                <- -0.1867
betas$b_oxygen	                <- 0.1209
betas$b_fev1pp100	              <- -0.5584
betas$b_sgrq10                  <- 0.1064
betas$b_cardiovascular	        <- 0.1359
betas$b_randomized_azithromycin <- -0.1287
betas$b_LAMA	                  <- 0.1678
betas$b_LABA	                  <- 0.1137
betas$b_ICS	                    <- 0.279
betas$b_randomized_LAMA	        <- 0.2202
betas$b_randomized_LABA	        <- 0.1321
betas$b_randomized_ICS	        <- -0.2359
betas$b_randomized_statin	      <- -0.1573
betas$b_BMI10                   <- -0.1333
betas$c0	                      <- -3.6901
betas$c_male	                  <- 0.4255
betas$c_age10	                  <- 0.09545
betas$c_nowsmk                  <- 0.4211
betas$c_oxygen                  <- 0.546
betas$c_fev1pp100	              <- -0.8095
betas$c_sgrq10                  <- 0.1781
betas$c_cardiovascular	        <- 0.2326
betas$c_randomized_azithromycin <- -0.1305
betas$c_LAMA	                  <- -0.1638
betas$c_LABA            	      <- 0.05466
betas$c_ICS	                    <- 0.2677
betas$c_randomized_LAMA	        <- 0.2193
betas$c_randomized_LABA	        <- -0.4085
betas$c_randomized_ICS	        <- -0.1755
betas$c_randomized_statin	      <- 0.2169
betas$c_BMI10           	      <- -0.09666
betas$v1 	<- 0.6855
betas$v2	<- 2.2494
betas$cov	<- 0.08772
# Spline coefficients: Rates
rate_knots = c(0.7145958, 0.9912697, 1.4652412)
rate_boundary_knots = c(0.329367, 4.068048)
sev_knots = c(0.1104125, 0.1553361, 0.2440743)
sev_boundary_knots = c(0.02618769, 1.72861911)
rate_coeff <- c(0.06518199, 0.90307795, 2.31804966, 4.23148175, 5.03274433)
sev_coeff <- c(0.05010488, 0.10449992, 0.82837734, 1.76211800, 2.45999937)
} else if (!KeepMeds & KeepSGRQ)
{
message ("Warning: You are using a simplified version of the model that does not include medications. See the manuscript for more details.")
# model coefficients
betas$gamma	                    <- 0.9707
betas$b0	                      <- 0.1371
betas$b_male	                  <- -0.1841
betas$b_age10	                  <- -0.00501
betas$b_nowsmk	                <- -0.2136
betas$b_oxygen	                <- 0.1381
betas$b_fev1pp100	              <- -0.6955
betas$b_sgrq10                  <- 0.1111
betas$b_cardiovascular	        <- 0.1835
betas$b_randomized_azithromycin <- -0.06597
betas$b_randomized_LAMA	        <- 0.2385
betas$b_randomized_LABA	        <- 0.1318
betas$b_randomized_ICS	        <- -0.2669
betas$b_randomized_statin	      <- -0.2646
betas$b_BMI10                   <- -0.1352
betas$c0	                      <- -3.6522
betas$c_male	                  <- 0.4285
betas$c_age10	                  <- 0.09704
betas$c_nowsmk                  <- 0.4338
betas$c_oxygen                  <- 0.539
betas$c_fev1pp100	              <- -0.7998
betas$c_sgrq10                  <- 0.1778
betas$c_cardiovascular	        <- 0.2554
betas$c_randomized_azithromycin <- -0.09003
betas$c_randomized_LAMA	        <- 0.2093
betas$c_randomized_LABA	        <- -0.4087
betas$c_randomized_ICS	        <- -0.1739
betas$c_randomized_statin	      <- 0.08586
betas$c_BMI10           	      <- -0.08287
betas$v1 	<- 0.7083
betas$v2	<- 2.2753
betas$cov	<- 0.09212
# Spline coefficients: Rates
rate_knots = c(0.1018911, 0.1420318, 0.2163109)
rate_boundary_knots = c(0.03407203, 1.56146110)
sev_knots = c(0.6866579, 0.9167824, 1.3328795)
sev_boundary_knots = c(0.3993395, 3.7012484)
rate_coeff <- c(0.1197930, 0.9126978, 2.2951754, 4.0110488, 4.9058539)
sev_coeff <- c(0.05871868, 0.10250238, 0.82620839, 1.68624119, 2.38272234)
} else if (KeepMeds & !KeepSGRQ)
{
message ("Warning: You are using a simplified version of the model that does not include St. George Respiratory Questionnaire. See the manuscript for more details.")
# model coefficients
betas$gamma	                    <- 0.97
betas$b0	                      <- 0.5072
betas$b_male	                  <- -0.1791
betas$b_age10	                  <- -0.040983
betas$b_nowsmk	                <- -0.1353
betas$b_oxygen	                <- 0.1561
betas$b_fev1pp100	              <- -0.7846
betas$b_cardiovascular	        <- 0.1642
betas$b_randomized_azithromycin <- -0.1259
betas$b_LAMA	                  <- 0.1808
betas$b_LABA	                  <- 0.0933
betas$b_ICS	                    <- 0.3052
betas$b_randomized_LAMA	        <- 0.2451
betas$b_randomized_LABA	        <- 0.1034
betas$b_randomized_ICS	        <- -0.2339
betas$b_randomized_statin	      <- -0.1575
betas$b_BMI10                   <- -0.1088
betas$c0	                      <- -2.4146
betas$c_male	                  <- 0.4525
betas$c_age10	                  <- 0.03839
betas$c_nowsmk                  <- 0.51
betas$c_oxygen                  <- 0.6046
betas$c_fev1pp100	              <- -1.2895
betas$c_cardiovascular	        <- 0.2882
betas$c_randomized_azithromycin <- -0.1343
betas$c_LAMA	                  <- -0.1531
betas$c_LABA            	      <- 0.01885
betas$c_ICS	                    <- 0.3003
betas$c_randomized_LAMA	        <- 0.2378
betas$c_randomized_LABA	        <- -0.4569
betas$c_randomized_ICS	        <- -0.171
betas$c_randomized_statin	      <- 0.1928
betas$c_BMI10           	      <- -0.06825
betas$v1 	<- 0.7161
betas$v2	<- 2.3299
betas$cov	<- 0.1465
# Spline coefficients: Rates
rate_knots = c(0.7456274, 0.9866093, 1.4210972)
rate_boundary_knots = c(0.4203808, 3.7239562)
sev_knots = c(0.1137685, 0.1493893, 0.2106265)
sev_boundary_knots = c(0.04448195, 1.56042213)
rate_coeff <- c(0.1650515, 0.8529724, 2.0886867, 3.9422245, 4.9643087)
sev_coeff <- c(0.05590748, 0.09148651, 0.86588143, 1.69546615, 2.33351171)
} else if (!KeepMeds & !KeepSGRQ)
{
message ("Warning: You are using a simplified version of the model that does includes neither medications nor St. George Respiratory Questionnaire. See the manuscript for more details.")
# model coefficients
betas$gamma	                    <- 0.9701
betas$b0	                      <- 0.8911
betas$b_male	                  <- -0.1791
betas$b_age10	                  <- -0.0397
betas$b_nowsmk	                <- -0.1616
betas$b_oxygen	                <- 0.1777
betas$b_fev1pp100	              <- -0.9282
betas$b_cardiovascular	        <- 0.216
betas$b_randomized_azithromycin <- -0.05931
betas$b_randomized_LAMA	        <- 0.2871
betas$b_randomized_LABA	        <- 0.09825
betas$b_randomized_ICS	        <- -0.2612
betas$b_randomized_statin	      <- -0.2646
betas$b_BMI10                   <- -0.1112
betas$c0	                      <- -2.3819
betas$c_male	                  <- 0.45
betas$c_age10	                  <- 0.0423
betas$c_nowsmk                  <- 0.5255
betas$c_oxygen                  <- 0.6051
betas$c_fev1pp100	              <- -1.3091
betas$c_cardiovascular	        <- 0.3234
betas$c_randomized_azithromycin <- -0.08298
betas$c_randomized_LAMA	        <- 0.2853
betas$c_randomized_LABA	        <- -0.475
betas$c_randomized_ICS	        <- -0.1957
betas$c_randomized_statin	      <- 0.07671
betas$c_BMI10           	      <- -0.06022
betas$v1 	<- 0.7424
betas$v2	<- 2.3784
betas$cov	<- 0.1564
# Spline coefficients: Rates
rate_knots = c(0.7028951, 0.9131159, 1.3158333)
rate_boundary_knots = c(0.4924904, 3.3967642)
sev_knots = c(0.1020546, 0.1304339, 0.1826366)
sev_boundary_knots = c(0.05212108, 1.39483400)
rate_coeff <- c(0.1513950, 0.9446998, 2.2107619, 3.9384999, 4.8656656)
sev_coeff <- c(0.05768919, 0.12920786, 0.63391906, 1.49899418, 2.24064269)
}
# More accurate azithromycin therapy estimates from AJE paper (https://doi.org/10.1093/aje/kww085), Table 2
betas$b_randomized_azithromycin <- 	 log(1/1.30)
betas$c_randomized_azithromycin <- 	 log(0.93)
results_before_adj <- acceptEngine(patientData = patientData, betas = betas, KeepMeds = KeepMeds, KeepSGRQ = KeepSGRQ)
results_after_adj <- Sp_Manual_Vec(results_before_adj, rate_coeff, rate_knots, rate_boundary_knots)
ci_plot <- plotly::plot_ly(data = iris, x = ~Sepal.Length, y = ~Petal.Length)
result_list <- list(results_after_adj, ci_plot)
return(result_list, ci_plot)
}
accept2(samplePatients[1,])
source('~/RESP/accept/R/predict.R')
source('~/RESP/accept/R/predict.R')
library(peermodels)
peermodels::prism_hand_shake("voiPrism",server="http://localhost:5656/ocpu")
prism_model_run(model_name='voiPrism')
prism_model_run(model_name='voiPrism',model_input=list())
prism_model_run(model_name='voiPrism',model_input=list(),api_key = "")
prism_model_run(model_name='voiPrism',server='http://localhost:5656/ocpu',model_input=list(),api_key = "")
prism_model_run(model_name='voiPrism',server='http://localhost:5656/ocpu',model_input=list(),api_key = "",method="test")
prism_model_run(model_name='voiPrism',server='http://localhost:5656/ocpu',model_input=list(method="evpi"),api_key = "")
prism_model_run
remove.packages('voiPrism')
remotes::install_github('resplab/voiPrism')
prism_model_run(model_name='voiPrism',server='http://localhost:5656/ocpu',model_input=list(),api_key = "",method="test")
prism_model_run(model_name='voiPrism',server='http://localhost:5656/ocpu',model_input=list(),api_key = "")
library(opencpu)
ocpu_start_server()
setwd("~/RESP/voiPeermodels")
